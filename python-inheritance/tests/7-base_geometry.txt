=================================
How to Use 7-base_geometry.py
=================================

This module defines a BaseGeometry class with methods for area calculation
and integer validation.

Usage
=====

Creating an instance of `BaseGeometry`:

::

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

Calling `integer_validator()` with valid integers:

::

    >>> bg.integer_validator("my_int", 12)

::

    >>> bg.integer_validator("width", 89)

Calling `integer_validator()` with invalid types:

::

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

::

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

::

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0

Additional `integer_validator()` tests with different data types:

::

    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    TypeError: age must be an integer

::

    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    TypeError: age must be an integer

::

    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
    TypeError: age must be an integer

::

    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    TypeError: age must be an integer

::

    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    TypeError: age must be an integer

Calling `area()` without implementation:

::

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented
